{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","to","slug","cn","sex","name","PeopleTable","people","personSlug","useParams","map","mother","find","motherName","father","fatherName","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","catch","finally","length","NotFoundPage","Navbar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.baa21245.chunk.js","sourcesContent":["export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn('', {\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype PeopleTableProps = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people.find(\n            ({ name }) => name === person.motherName,\n          );\n          const father = people.find(\n            ({ name }) => name === person.fatherName,\n          );\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn('', {\n                'has-background-warning': person.slug === personSlug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  // eslint-disable-next-line no-nested-ternary\n                  mother\n                    ? <PersonLink person={mother} />\n                    : person.motherName\n                      ? person.motherName\n                      : '-'\n                }\n              </td>\n              <td>\n                {\n                  // eslint-disable-next-line no-nested-ternary\n                  father\n                    ? <PersonLink person={father} />\n                    : person.fatherName\n                      ? person.fatherName\n                      : '-'\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && people.length > 0 && !hasError) && (\n            <PeopleTable people={people} />\n          )}\n\n          {(!isLoading && people.length === 0 && !hasError) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={\n            ({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })\n          }\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/people\"\n          className={\n            ({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })\n          }\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          >\n            <Route path=\":personSlug\" />\n          </Route>\n          <Route\n            path=\"/*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}